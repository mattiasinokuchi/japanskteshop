<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Kassa</title>
    <!-- load stripe.js -->
    <script src="https://js.stripe.com/v3/"></script>
  </head>
  <body>
    {{> header}}
    <fieldset>
      <legend>I korgen</legend>
        <table id="list"></table>
        <input type="button" value="Töm korgen" onclick="ClearAll()">
        <button id="buyButton" onclick="buyItems">
          Köp för <span id="total">0</span> kr
        </button>
    </fieldset>
    {{> footer}}
    <script>

      // Publishable key from API keys in the Stripe Dashboard
      var PUBLISHABLE_KEY = "pk_live_QAeLzztCGto6VeIqPuUCGcF100c8v0Efqb";

      // Replace with the domain you want your users to be redirected back to after payment
      var DOMAIN = location.href.replace(/[^/]*$/, "");

      var stripe = Stripe(PUBLISHABLE_KEY);

      var buyButton = document.getElementById("buyButton");

      // Array for Stripe checkout
      var itemsArray = [];

      // Call functions to populate table and button
      window.load=doShowAll(), showGrandTotal(), createItemsArray();

      // Populate table with items
      function doShowAll() {
        var key = "";
        var link ="";
        var list = "<tr>\
                      <th></th>\
                      <th>Antal</th>\
                      <th>Styckpris</th>\
                      <th>Radsumma</th>\
                    </tr>\n";
        var i = 0;
        //For a more advanced feature, you can set a cap on max items in the cart.
        for (i = 0; i <= sessionStorage.length-1; i++) {
          key = sessionStorage.key(i);
          link = '<a href="' + key + '">' + key + '</a>';
          list += "<tr><td>" + link + "</td>\n<td>"
          + JSON.parse(sessionStorage.getItem(key))[0] + "</td><td>"
          + JSON.parse(sessionStorage.getItem(key))[1] + "</td><td>"
          + JSON.parse(sessionStorage.getItem(key))[2] + "</td></tr>";
        }
        //if no item exists in the cart.
        if (list == "<tr>\
                      <th></th>\
                      <th>Antal</th>\
                      <th>Styckpris</th>\
                      <th>Radsumma</th>\
                    </tr>") {
          list += "<tr>\
                    <td><i></i></td>\
                    <td><i></i></td>\
                    <td><i></i></td>\
                  </tr>";
        }
        //bind amount to HTML table.
        document.getElementById('list').innerHTML = list;
      }

      // Clear the session storage,
      function ClearAll() {
        sessionStorage.clear();
        doShowAll();
        showGrandTotal();
        createItemsArray();
      }

      // Populate buyButton
      function showGrandTotal() {
        grandTotal = 0;
        //populate label with amount
        if (sessionStorage.length === 0) {
          document.getElementById("total").textContent = "0";
        } else {
          for (i = 0; i <= sessionStorage.length-1; i++) {
            key = sessionStorage.key(i);
            grandTotal+= parseInt(JSON.parse(sessionStorage.getItem(key))[2]);
          }
          document.getElementById("total").textContent = grandTotal;
        }
      }

      // Create items array for Stripe checkout
      function createItemsArray() {
        var i = 0;
        for (i = 0; i <= sessionStorage.length-1; i++) {
          key = sessionStorage.key(i);
          itemsArray.push(
            { sku: JSON.parse(sessionStorage.getItem(key))[3],
              quantity: JSON.parse(sessionStorage.getItem(key))[0]
            }
          );
        }
      }

      // Handle any errors from Checkout
      var handleResult = function(result) {
        if (result.error) {
          var displayError = document.getElementById("error-message");
          displayError.textContent = result.error.message;
        }
      }

      // Make the call to Stripe.js to redirect to the checkout page
      function buyItems() {
        stripe.redirectToCheckout({
          items: itemsArray,
          successUrl: DOMAIN + "/success.html?session_id={CHECKOUT_SESSION_ID}",
          cancelUrl: DOMAIN + "/canceled.html"
        }).then(handleResult);
      }
      
    </script>
  </body>
</html>
