<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Kassa</title>
    <!-- load stripe.js -->
    <script src="https://js.stripe.com/v3/"></script>
  </head>
  <body>
    {{> header}}
    <form name="ShoppingList">
        <fieldset>
            <label>Item: <input type="text" name="name"></label>
            <label>Quantity: <input type="text" name="data"></label>
            <input type="button" value="Save"   onclick="SaveItem()">
            <input type="button" value="Update" onclick="ModifyItem()">
            <input type="button" value="Delete" onclick="RemoveItem()">
        </fieldset>
        <div id="items_table">
            <h2>I korgen</h2>
            <table id="list"></table>
            <input type="button" value="Töm korgen" onclick="ClearAll()">
        </div>
    </form>

    <!-- copied from Stripe -->
    <section class="container">
      <div class="quantity-setter">
        <input type="number" id="quantity-input" min="1" value="1" />
        <button class="increment-btn" id="add">Lägg i korgen</button>
      </div>
      <button id="basic-button">
        Köp för <span id="total">5</span> kr
      </button>
    </section>
    {{> footer}}
    <script>
      //show table for items
      window.load=doShowAll();
      //populate table with items
      function doShowAll() {
        var key = "";
        var link ="";
        var list = "<tr><th></th><th>Antal</th></tr>\n";
        var i = 0;
        //For a more advanced feature, you can set a cap on max items in the cart.
        for (i = 0; i <= localStorage.length-1; i++) {
          key = localStorage.key(i);
          link = '<a href="' + key + '">' + key + '</a>';
          list += "<tr><td>" + link + "</td>\n<td>"
          + localStorage.getItem(key) + "</td></tr>\n";
        }
        //if no item exists in the cart.
        if (list == "<tr><th></th><th>Antal</th></tr>\n") {
          list += "<tr><td><i></i></td>\n<td><i></i></td></tr>\n";
        }
        //bind data to HTML table.
        document.getElementById('list').innerHTML = list;
      }
      //save key-value pair, get JavaScript object and call setItem method
      function SaveItem() {
        var name = "{{pageTitle}}";
        var data = document.forms.ShoppingList.data.value;
        localStorage.setItem(name, data);
        doShowAll();
      }
      //change an item in storage
      function ModifyItem() {
        var name1 = document.forms.ShoppingList.name.value;
        var data1 = document.forms.ShoppingList.data.value;
        //check if key exists
        if (localStorage.getItem(name1) !=null) {
          //update
          localStorage.setItem(name1,data1);
          document.forms.ShoppingList.data.value = localStorage.getItem(name1);
        }
        doShowAll();
      }
      //delete an item from storage
      function RemoveItem() {
        var name=document.forms.ShoppingList.name.value;
        document.forms.ShoppingList.data.value=localStorage.removeItem(name);
        doShowAll();
      }
      //clear the local storage,
      function ClearAll() {
        localStorage.clear();
        doShowAll();
      }

      // Publishable key from API keys in the Stripe Dashboard
      var PUBLISHABLE_KEY = "pk_live_QAeLzztCGto6VeIqPuUCGcF100c8v0Efqb";
      // Replace with the domain you want your users to be redirected back to after payment
      var DOMAIN = location.href.replace(/[^/]*$/, "");
      // SKU created in the Stripe Dashboard
      var SKU_ID = "sku_GWpdbzpAxPznoC";

      var stripe = Stripe(PUBLISHABLE_KEY);

      var basicButton = document.getElementById("basic-button");

      var updateQuantity = function(evt) {
        if (evt && evt.type === "keypress" && evt.keyCode !== 13) {
          return;
        }
        var inputEl = document.getElementById("quantity-input");
        var currentQuantity = parseInt(inputEl.value);
        var quantity = currentQuantity + 1;
        inputEl.value = quantity;
        document.getElementById("total").textContent = quantity;
      };

      Array.from(document.getElementsByClassName("increment-btn")).forEach(
        element => {
          element.addEventListener("click", updateQuantity);
        }
      );

      // Handle any errors from Checkout
      var handleResult = function(result) {
        if (result.error) {
          var displayError = document.getElementById("error-message");
          displayError.textContent = result.error.message;
        }
      };

      basicButton.addEventListener("click", function() {
        var quantity = parseInt(
          document.getElementById("quantity-input").value
        );

        // Make the call to Stripe.js to redirect to the checkout page
        // with the current quantity
      stripe
          .redirectToCheckout({
            items: [{ sku: SKU_ID, quantity: quantity }],
            successUrl:
              DOMAIN + "/success.html?session_id={CHECKOUT_SESSION_ID}",
            cancelUrl: DOMAIN + "/canceled.html"
          })
          .then(handleResult);
      });
    </script>
  </body>
</html>
